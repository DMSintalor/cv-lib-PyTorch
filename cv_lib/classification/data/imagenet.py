import os
from typing import Callable, Tuple, Optional, Dict, Any, List

from PIL import Image
import pandas as pd

import torch
from torchvision.datasets.utils import verify_str_arg
from torchvision.datasets.folder import default_loader

from cv_lib.utils import log_utils

from .classification_dataset import ClassificationDataset
from .utils import make_datafolder


MEAN = [0.485, 0.456, 0.406]
STD = [0.229, 0.224, 0.225]


class ImageNet(ClassificationDataset):
    """
    Image folder:
        ├── devkit
        │   └── data
        ├── train_set
        │   ├── n01440764
        │       ├── n01440764_10026.JPEG
        |   |   ├── ...
        │   ├── n01443537
        │   ├── ...
        ├── val_set
    """
    def __init__(
        self,
        root: str,
        split: str = "train",
        resize: Optional[Tuple[int]] = None,
        augmentations: Callable[[Image.Image, Dict[str, Any]], Tuple[Image.Image, Dict[str, Any]]] = None,
        make_partial: float = None,
        manual_classes_fp: str = None,
        use_real_class_name: bool = False
    ):
        """
        Args:
            root: root to Imagenet folder
            split: split of dataset, i.e., `train` and `val`
            resize: all images will be resized to given size. If `None`, all images will not be resized
            manual_classes_fp: csv file with all manual classes in a column with name "classes"
            use_real_class_name: if True, use real class name for as label info, e.g.,
                "kit_fox" rather than "n02119789"
        """
        super().__init__(resize, augmentations)
        self.root = os.path.expanduser(root)
        verify_str_arg(split, "split", ("train", "val"))
        self.split = split
        self.data_folder = os.path.join(self.root, self.split)
        self.meta_folder = os.path.join(self.root, "devkit", "data")
        self.use_real_class_name = use_real_class_name

        self.logger = log_utils.get_master_logger("Imagenet")

        classes = None
        if manual_classes_fp:
            df = pd.read_csv(manual_classes_fp)
            classes = list(df["classes"])
        self._init_dataset(make_partial, classes)

    def _init_dataset(self, make_partial: float, manual_classes: List[str]):
        self.dataset_mean = MEAN
        self.dataset_std = STD
        self.logger.info("Reading dataset folder...")
        self.instances, self.label_info, self.label_map = make_datafolder(
            self.data_folder,
            make_partial,
            manual_classes
        )
        if self.use_real_class_name:
            self.label_info = {k: REAL_LABEL_MAP[v] for k, v in self.label_info.items()}
            self.label_map = {REAL_LABEL_MAP[k]: v for k, v in self.label_map.items()}

    def __len__(self):
        return len(self.instances)

    def get_image(self, index: int) -> Image:
        image_fp = os.path.join(self.data_folder, self.instances[index][0])
        image = default_loader(image_fp)
        return image

    def get_annotation(self, index: int) -> Dict[str, Any]:
        label = self.instances[index][1]
        annot = dict(label=torch.tensor(label))
        return annot


# collected from https://gist.github.com/aaronpolhamus/964a4411c0906315deb9f4a3723aac57
REAL_LABEL_MAP = {
    "n02119789": "kit_fox",
    "n02100735": "English_setter",
    "n02110185": "Siberian_husky",
    "n02096294": "Australian_terrier",
    "n02102040": "English_springer",
    "n02066245": "grey_whale",
    "n02509815": "lesser_panda",
    "n02124075": "Egyptian_cat",
    "n02417914": "ibex",
    "n02123394": "Persian_cat",
    "n02125311": "cougar",
    "n02423022": "gazelle",
    "n02346627": "porcupine",
    "n02077923": "sea_lion",
    "n02110063": "malamute",
    "n02447366": "badger",
    "n02109047": "Great_Dane",
    "n02089867": "Walker_hound",
    "n02102177": "Welsh_springer_spaniel",
    "n02091134": "whippet",
    "n02092002": "Scottish_deerhound",
    "n02071294": "killer_whale",
    "n02442845": "mink",
    "n02504458": "African_elephant",
    "n02092339": "Weimaraner",
    "n02098105": "soft-coated_wheaten_terrier",
    "n02096437": "Dandie_Dinmont",
    "n02114712": "red_wolf",
    "n02105641": "Old_English_sheepdog",
    "n02128925": "jaguar",
    "n02091635": "otterhound",
    "n02088466": "bloodhound",
    "n02096051": "Airedale",
    "n02117135": "hyena",
    "n02138441": "meerkat",
    "n02097130": "giant_schnauzer",
    "n02493509": "titi",
    "n02457408": "three-toed_sloth",
    "n02389026": "sorrel",
    "n02443484": "black-footed_ferret",
    "n02110341": "dalmatian",
    "n02089078": "black-and-tan_coonhound",
    "n02086910": "papillon",
    "n02445715": "skunk",
    "n02093256": "Staffordshire_bullterrier",
    "n02113978": "Mexican_hairless",
    "n02106382": "Bouvier_des_Flandres",
    "n02441942": "weasel",
    "n02113712": "miniature_poodle",
    "n02113186": "Cardigan",
    "n02105162": "malinois",
    "n02415577": "bighorn",
    "n02356798": "fox_squirrel",
    "n02488702": "colobus",
    "n02123159": "tiger_cat",
    "n02098413": "Lhasa",
    "n02422699": "impala",
    "n02114855": "coyote",
    "n02094433": "Yorkshire_terrier",
    "n02111277": "Newfoundland",
    "n02132136": "brown_bear",
    "n02119022": "red_fox",
    "n02091467": "Norwegian_elkhound",
    "n02106550": "Rottweiler",
    "n02422106": "hartebeest",
    "n02091831": "Saluki",
    "n02120505": "grey_fox",
    "n02104365": "schipperke",
    "n02086079": "Pekinese",
    "n02112706": "Brabancon_griffon",
    "n02098286": "West_Highland_white_terrier",
    "n02095889": "Sealyham_terrier",
    "n02484975": "guenon",
    "n02137549": "mongoose",
    "n02500267": "indri",
    "n02129604": "tiger",
    "n02090721": "Irish_wolfhound",
    "n02396427": "wild_boar",
    "n02108000": "EntleBucher",
    "n02391049": "zebra",
    "n02412080": "ram",
    "n02108915": "French_bulldog",
    "n02480495": "orangutan",
    "n02110806": "basenji",
    "n02128385": "leopard",
    "n02107683": "Bernese_mountain_dog",
    "n02085936": "Maltese_dog",
    "n02094114": "Norfolk_terrier",
    "n02087046": "toy_terrier",
    "n02100583": "vizsla",
    "n02096177": "cairn",
    "n02494079": "squirrel_monkey",
    "n02105056": "groenendael",
    "n02101556": "clumber",
    "n02123597": "Siamese_cat",
    "n02481823": "chimpanzee",
    "n02105505": "komondor",
    "n02088094": "Afghan_hound",
    "n02085782": "Japanese_spaniel",
    "n02489166": "proboscis_monkey",
    "n02364673": "guinea_pig",
    "n02114548": "white_wolf",
    "n02134084": "ice_bear",
    "n02480855": "gorilla",
    "n02090622": "borzoi",
    "n02113624": "toy_poodle",
    "n02093859": "Kerry_blue_terrier",
    "n02403003": "ox",
    "n02097298": "Scotch_terrier",
    "n02108551": "Tibetan_mastiff",
    "n02493793": "spider_monkey",
    "n02107142": "Doberman",
    "n02096585": "Boston_bull",
    "n02107574": "Greater_Swiss_Mountain_dog",
    "n02107908": "Appenzeller",
    "n02086240": "Shih-Tzu",
    "n02102973": "Irish_water_spaniel",
    "n02112018": "Pomeranian",
    "n02093647": "Bedlington_terrier",
    "n02397096": "warthog",
    "n02437312": "Arabian_camel",
    "n02483708": "siamang",
    "n02097047": "miniature_schnauzer",
    "n02106030": "collie",
    "n02099601": "golden_retriever",
    "n02093991": "Irish_terrier",
    "n02110627": "affenpinscher",
    "n02106166": "Border_collie",
    "n02326432": "hare",
    "n02108089": "boxer",
    "n02097658": "silky_terrier",
    "n02088364": "beagle",
    "n02111129": "Leonberg",
    "n02100236": "German_short-haired_pointer",
    "n02486261": "patas",
    "n02115913": "dhole",
    "n02486410": "baboon",
    "n02487347": "macaque",
    "n02099849": "Chesapeake_Bay_retriever",
    "n02108422": "bull_mastiff",
    "n02104029": "kuvasz",
    "n02492035": "capuchin",
    "n02110958": "pug",
    "n02099429": "curly-coated_retriever",
    "n02094258": "Norwich_terrier",
    "n02099267": "flat-coated_retriever",
    "n02395406": "hog",
    "n02112350": "keeshond",
    "n02109961": "Eskimo_dog",
    "n02101388": "Brittany_spaniel",
    "n02113799": "standard_poodle",
    "n02095570": "Lakeland_terrier",
    "n02128757": "snow_leopard",
    "n02101006": "Gordon_setter",
    "n02115641": "dingo",
    "n02097209": "standard_schnauzer",
    "n02342885": "hamster",
    "n02097474": "Tibetan_terrier",
    "n02120079": "Arctic_fox",
    "n02095314": "wire-haired_fox_terrier",
    "n02088238": "basset",
    "n02408429": "water_buffalo",
    "n02133161": "American_black_bear",
    "n02328150": "Angora",
    "n02410509": "bison",
    "n02492660": "howler_monkey",
    "n02398521": "hippopotamus",
    "n02112137": "chow",
    "n02510455": "giant_panda",
    "n02093428": "American_Staffordshire_terrier",
    "n02105855": "Shetland_sheepdog",
    "n02111500": "Great_Pyrenees",
    "n02085620": "Chihuahua",
    "n02123045": "tabby",
    "n02490219": "marmoset",
    "n02099712": "Labrador_retriever",
    "n02109525": "Saint_Bernard",
    "n02454379": "armadillo",
    "n02111889": "Samoyed",
    "n02088632": "bluetick",
    "n02090379": "redbone",
    "n02443114": "polecat",
    "n02361337": "marmot",
    "n02105412": "kelpie",
    "n02483362": "gibbon",
    "n02437616": "llama",
    "n02107312": "miniature_pinscher",
    "n02325366": "wood_rabbit",
    "n02091032": "Italian_greyhound",
    "n02129165": "lion",
    "n02102318": "cocker_spaniel",
    "n02100877": "Irish_setter",
    "n02074367": "dugong",
    "n02504013": "Indian_elephant",
    "n02363005": "beaver",
    "n02102480": "Sussex_spaniel",
    "n02113023": "Pembroke",
    "n02086646": "Blenheim_spaniel",
    "n02497673": "Madagascar_cat",
    "n02087394": "Rhodesian_ridgeback",
    "n02127052": "lynx",
    "n02116738": "African_hunting_dog",
    "n02488291": "langur",
    "n02091244": "Ibizan_hound",
    "n02114367": "timber_wolf",
    "n02130308": "cheetah",
    "n02089973": "English_foxhound",
    "n02105251": "briard",
    "n02134418": "sloth_bear",
    "n02093754": "Border_terrier",
    "n02106662": "German_shepherd",
    "n02444819": "otter",
    "n01882714": "koala",
    "n01871265": "tusker",
    "n01872401": "echidna",
    "n01877812": "wallaby",
    "n01873310": "platypus",
    "n01883070": "wombat",
    "n04086273": "revolver",
    "n04507155": "umbrella",
    "n04147183": "schooner",
    "n04254680": "soccer_ball",
    "n02672831": "accordion",
    "n02219486": "ant",
    "n02317335": "starfish",
    "n01968897": "chambered_nautilus",
    "n03452741": "grand_piano",
    "n03642806": "laptop",
    "n07745940": "strawberry",
    "n02690373": "airliner",
    "n04552348": "warplane",
    "n02692877": "airship",
    "n02782093": "balloon",
    "n04266014": "space_shuttle",
    "n03344393": "fireboat",
    "n03447447": "gondola",
    "n04273569": "speedboat",
    "n03662601": "lifeboat",
    "n02951358": "canoe",
    "n04612504": "yawl",
    "n02981792": "catamaran",
    "n04483307": "trimaran",
    "n03095699": "container_ship",
    "n03673027": "liner",
    "n03947888": "pirate",
    "n02687172": "aircraft_carrier",
    "n04347754": "submarine",
    "n04606251": "wreck",
    "n03478589": "half_track",
    "n04389033": "tank",
    "n03773504": "missile",
    "n02860847": "bobsled",
    "n03218198": "dogsled",
    "n02835271": "bicycle-built-for-two",
    "n03792782": "mountain_bike",
    "n03393912": "freight_car",
    "n03895866": "passenger_car",
    "n02797295": "barrow",
    "n04204347": "shopping_cart",
    "n03791053": "motor_scooter",
    "n03384352": "forklift",
    "n03272562": "electric_locomotive",
    "n04310018": "steam_locomotive",
    "n02704792": "amphibian",
    "n02701002": "ambulance",
    "n02814533": "beach_wagon",
    "n02930766": "cab",
    "n03100240": "convertible",
    "n03594945": "jeep",
    "n03670208": "limousine",
    "n03770679": "minivan",
    "n03777568": "Model_T",
    "n04037443": "racer",
    "n04285008": "sports_car",
    "n03444034": "go-kart",
    "n03445924": "golfcart",
    "n03785016": "moped",
    "n04252225": "snowplow",
    "n03345487": "fire_engine",
    "n03417042": "garbage_truck",
    "n03930630": "pickup",
    "n04461696": "tow_truck",
    "n04467665": "trailer_truck",
    "n03796401": "moving_van",
    "n03977966": "police_van",
    "n04065272": "recreational_vehicle",
    "n04335435": "streetcar",
    "n04252077": "snowmobile",
    "n04465501": "tractor",
    "n03776460": "mobile_home",
    "n04482393": "tricycle",
    "n04509417": "unicycle",
    "n03538406": "horse_cart",
    "n03599486": "jinrikisha",
    "n03868242": "oxcart",
    "n02804414": "bassinet",
    "n03125729": "cradle",
    "n03131574": "crib",
    "n03388549": "four-poster",
    "n02870880": "bookcase",
    "n03018349": "china_cabinet",
    "n03742115": "medicine_chest",
    "n03016953": "chiffonier",
    "n04380533": "table_lamp",
    "n03337140": "file",
    "n03891251": "park_bench",
    "n02791124": "barber_chair",
    "n04429376": "throne",
    "n03376595": "folding_chair",
    "n04099969": "rocking_chair",
    "n04344873": "studio_couch",
    "n04447861": "toilet_seat",
    "n03179701": "desk",
    "n03982430": "pool_table",
    "n03201208": "dining_table",
    "n03290653": "entertainment_center",
    "n04550184": "wardrobe",
    "n07742313": "Granny_Smith",
    "n07747607": "orange",
    "n07749582": "lemon",
    "n07753113": "fig",
    "n07753275": "pineapple",
    "n07753592": "banana",
    "n07754684": "jackfruit",
    "n07760859": "custard_apple",
    "n07768694": "pomegranate",
    "n12267677": "acorn",
    "n12620546": "hip",
    "n13133613": "ear",
    "n11879895": "rapeseed",
    "n12144580": "corn",
    "n12768682": "buckeye",
    "n03854065": "organ",
    "n04515003": "upright",
    "n03017168": "chime",
    "n03249569": "drum",
    "n03447721": "gong",
    "n03720891": "maraca",
    "n03721384": "marimba",
    "n04311174": "steel_drum",
    "n02787622": "banjo",
    "n02992211": "cello",
    "n04536866": "violin",
    "n03495258": "harp",
    "n02676566": "acoustic_guitar",
    "n03272010": "electric_guitar",
    "n03110669": "cornet",
    "n03394916": "French_horn",
    "n04487394": "trombone",
    "n03494278": "harmonica",
    "n03840681": "ocarina",
    "n03884397": "panpipe",
    "n02804610": "bassoon",
    "n03838899": "oboe",
    "n04141076": "sax",
    "n03372029": "flute",
    "n11939491": "daisy",
    "n12057211": "yellow_lady's_slipper",
    "n09246464": "cliff",
    "n09468604": "valley",
    "n09193705": "alp",
    "n09472597": "volcano",
    "n09399592": "promontory",
    "n09421951": "sandbar",
    "n09256479": "coral_reef",
    "n09332890": "lakeside",
    "n09428293": "seashore",
    "n09288635": "geyser",
    "n03498962": "hatchet",
    "n03041632": "cleaver",
    "n03658185": "letter_opener",
    "n03954731": "plane",
    "n03995372": "power_drill",
    "n03649909": "lawn_mower",
    "n03481172": "hammer",
    "n03109150": "corkscrew",
    "n02951585": "can_opener",
    "n03970156": "plunger",
    "n04154565": "screwdriver",
    "n04208210": "shovel",
    "n03967562": "plow",
    "n03000684": "chain_saw",
    "n01514668": "cock",
    "n01514859": "hen",
    "n01518878": "ostrich",
    "n01530575": "brambling",
    "n01531178": "goldfinch",
    "n01532829": "house_finch",
    "n01534433": "junco",
    "n01537544": "indigo_bunting",
    "n01558993": "robin",
    "n01560419": "bulbul",
    "n01580077": "jay",
    "n01582220": "magpie",
    "n01592084": "chickadee",
    "n01601694": "water_ouzel",
    "n01608432": "kite",
    "n01614925": "bald_eagle",
    "n01616318": "vulture",
    "n01622779": "great_grey_owl",
    "n01795545": "black_grouse",
    "n01796340": "ptarmigan",
    "n01797886": "ruffed_grouse",
    "n01798484": "prairie_chicken",
    "n01806143": "peacock",
    "n01806567": "quail",
    "n01807496": "partridge",
    "n01817953": "African_grey",
    "n01818515": "macaw",
    "n01819313": "sulphur-crested_cockatoo",
    "n01820546": "lorikeet",
    "n01824575": "coucal",
    "n01828970": "bee_eater",
    "n01829413": "hornbill",
    "n01833805": "hummingbird",
    "n01843065": "jacamar",
    "n01843383": "toucan",
    "n01847000": "drake",
    "n01855032": "red-breasted_merganser",
    "n01855672": "goose",
    "n01860187": "black_swan",
    "n02002556": "white_stork",
    "n02002724": "black_stork",
    "n02006656": "spoonbill",
    "n02007558": "flamingo",
    "n02009912": "American_egret",
    "n02009229": "little_blue_heron",
    "n02011460": "bittern",
    "n02012849": "crane",
    "n02013706": "limpkin",
    "n02018207": "American_coot",
    "n02018795": "bustard",
    "n02025239": "ruddy_turnstone",
    "n02027492": "red-backed_sandpiper",
    "n02028035": "redshank",
    "n02033041": "dowitcher",
    "n02037110": "oystercatcher",
    "n02017213": "European_gallinule",
    "n02051845": "pelican",
    "n02056570": "king_penguin",
    "n02058221": "albatross",
    "n01484850": "great_white_shark",
    "n01491361": "tiger_shark",
    "n01494475": "hammerhead",
    "n01496331": "electric_ray",
    "n01498041": "stingray",
    "n02514041": "barracouta",
    "n02536864": "coho",
    "n01440764": "tench",
    "n01443537": "goldfish",
    "n02526121": "eel",
    "n02606052": "rock_beauty",
    "n02607072": "anemone_fish",
    "n02643566": "lionfish",
    "n02655020": "puffer",
    "n02640242": "sturgeon",
    "n02641379": "gar",
    "n01664065": "loggerhead",
    "n01665541": "leatherback_turtle",
    "n01667114": "mud_turtle",
    "n01667778": "terrapin",
    "n01669191": "box_turtle",
    "n01675722": "banded_gecko",
    "n01677366": "common_iguana",
    "n01682714": "American_chameleon",
    "n01685808": "whiptail",
    "n01687978": "agama",
    "n01688243": "frilled_lizard",
    "n01689811": "alligator_lizard",
    "n01692333": "Gila_monster",
    "n01693334": "green_lizard",
    "n01694178": "African_chameleon",
    "n01695060": "Komodo_dragon",
    "n01704323": "triceratops",
    "n01697457": "African_crocodile",
    "n01698640": "American_alligator",
    "n01728572": "thunder_snake",
    "n01728920": "ringneck_snake",
    "n01729322": "hognose_snake",
    "n01729977": "green_snake",
    "n01734418": "king_snake",
    "n01735189": "garter_snake",
    "n01737021": "water_snake",
    "n01739381": "vine_snake",
    "n01740131": "night_snake",
    "n01742172": "boa_constrictor",
    "n01744401": "rock_python",
    "n01748264": "Indian_cobra",
    "n01749939": "green_mamba",
    "n01751748": "sea_snake",
    "n01753488": "horned_viper",
    "n01755581": "diamondback",
    "n01756291": "sidewinder",
    "n01629819": "European_fire_salamander",
    "n01630670": "common_newt",
    "n01631663": "eft",
    "n01632458": "spotted_salamander",
    "n01632777": "axolotl",
    "n01641577": "bullfrog",
    "n01644373": "tree_frog",
    "n01644900": "tailed_frog",
    "n04579432": "whistle",
    "n04592741": "wing",
    "n03876231": "paintbrush",
    "n03483316": "hand_blower",
    "n03868863": "oxygen_mask",
    "n04251144": "snorkel",
    "n03691459": "loudspeaker",
    "n03759954": "microphone",
    "n04152593": "screen",
    "n03793489": "mouse",
    "n03271574": "electric_fan",
    "n03843555": "oil_filter",
    "n04332243": "strainer",
    "n04265275": "space_heater",
    "n04330267": "stove",
    "n03467068": "guillotine",
    "n02794156": "barometer",
    "n04118776": "rule",
    "n03841143": "odometer",
    "n04141975": "scale",
    "n02708093": "analog_clock",
    "n03196217": "digital_clock",
    "n04548280": "wall_clock",
    "n03544143": "hourglass",
    "n04355338": "sundial",
    "n03891332": "parking_meter",
    "n04328186": "stopwatch",
    "n03197337": "digital_watch",
    "n04317175": "stethoscope",
    "n04376876": "syringe",
    "n03706229": "magnetic_compass",
    "n02841315": "binoculars",
    "n04009552": "projector",
    "n04356056": "sunglasses",
    "n03692522": "loupe",
    "n04044716": "radio_telescope",
    "n02879718": "bow",
    "n02950826": "cannon",
    "n02749479": "assault_rifle",
    "n04090263": "rifle",
    "n04008634": "projectile",
    "n03085013": "computer_keyboard",
    "n04505470": "typewriter_keyboard",
    "n03126707": "crane",
    "n03666591": "lighter",
    "n02666196": "abacus",
    "n02977058": "cash_machine",
    "n04238763": "slide_rule",
    "n03180011": "desktop_computer",
    "n03485407": "hand-held_computer",
    "n03832673": "notebook",
    "n06359193": "web_site",
    "n03496892": "harvester",
    "n04428191": "thresher",
    "n04004767": "printer",
    "n04243546": "slot",
    "n04525305": "vending_machine",
    "n04179913": "sewing_machine",
    "n03602883": "joystick",
    "n04372370": "switch",
    "n03532672": "hook",
    "n02974003": "car_wheel",
    "n03874293": "paddlewheel",
    "n03944341": "pinwheel",
    "n03992509": "potter's_wheel",
    "n03425413": "gas_pump",
    "n02966193": "carousel",
    "n04371774": "swing",
    "n04067472": "reel",
    "n04040759": "radiator",
    "n04019541": "puck",
    "n03492542": "hard_disc",
    "n04355933": "sunglass",
    "n03929660": "pick",
    "n02965783": "car_mirror",
    "n04258138": "solar_dish",
    "n04074963": "remote_control",
    "n03208938": "disk_brake",
    "n02910353": "buckle",
    "n03476684": "hair_slide",
    "n03627232": "knot",
    "n03075370": "combination_lock",
    "n03874599": "padlock",
    "n03804744": "nail",
    "n04127249": "safety_pin",
    "n04153751": "screw",
    "n03803284": "muzzle",
    "n04162706": "seat_belt",
    "n04228054": "ski",
    "n02948072": "candle",
    "n03590841": "jack-o'-lantern",
    "n04286575": "spotlight",
    "n04456115": "torch",
    "n03814639": "neck_brace",
    "n03933933": "pier",
    "n04485082": "tripod",
    "n03733131": "maypole",
    "n03794056": "mousetrap",
    "n04275548": "spider_web",
    "n01768244": "trilobite",
    "n01770081": "harvestman",
    "n01770393": "scorpion",
    "n01773157": "black_and_gold_garden_spider",
    "n01773549": "barn_spider",
    "n01773797": "garden_spider",
    "n01774384": "black_widow",
    "n01774750": "tarantula",
    "n01775062": "wolf_spider",
    "n01776313": "tick",
    "n01784675": "centipede",
    "n01990800": "isopod",
    "n01978287": "Dungeness_crab",
    "n01978455": "rock_crab",
    "n01980166": "fiddler_crab",
    "n01981276": "king_crab",
    "n01983481": "American_lobster",
    "n01984695": "spiny_lobster",
    "n01985128": "crayfish",
    "n01986214": "hermit_crab",
    "n02165105": "tiger_beetle",
    "n02165456": "ladybug",
    "n02167151": "ground_beetle",
    "n02168699": "long-horned_beetle",
    "n02169497": "leaf_beetle",
    "n02172182": "dung_beetle",
    "n02174001": "rhinoceros_beetle",
    "n02177972": "weevil",
    "n02190166": "fly",
    "n02206856": "bee",
    "n02226429": "grasshopper",
    "n02229544": "cricket",
    "n02231487": "walking_stick",
    "n02233338": "cockroach",
    "n02236044": "mantis",
    "n02256656": "cicada",
    "n02259212": "leafhopper",
    "n02264363": "lacewing",
    "n02268443": "dragonfly",
    "n02268853": "damselfly",
    "n02276258": "admiral",
    "n02277742": "ringlet",
    "n02279972": "monarch",
    "n02280649": "cabbage_butterfly",
    "n02281406": "sulphur_butterfly",
    "n02281787": "lycaenid",
    "n01910747": "jellyfish",
    "n01914609": "sea_anemone",
    "n01917289": "brain_coral",
    "n01924916": "flatworm",
    "n01930112": "nematode",
    "n01943899": "conch",
    "n01944390": "snail",
    "n01945685": "slug",
    "n01950731": "sea_slug",
    "n01955084": "chiton",
    "n02319095": "sea_urchin",
    "n02321529": "sea_cucumber",
    "n03584829": "iron",
    "n03297495": "espresso_maker",
    "n03761084": "microwave",
    "n03259280": "Dutch_oven",
    "n04111531": "rotisserie",
    "n04442312": "toaster",
    "n04542943": "waffle_iron",
    "n04517823": "vacuum",
    "n03207941": "dishwasher",
    "n04070727": "refrigerator",
    "n04554684": "washer",
    "n03133878": "Crock_Pot",
    "n03400231": "frying_pan",
    "n04596742": "wok",
    "n02939185": "caldron",
    "n03063689": "coffeepot",
    "n04398044": "teapot",
    "n04270147": "spatula",
    "n02699494": "altar",
    "n04486054": "triumphal_arch",
    "n03899768": "patio",
    "n04311004": "steel_arch_bridge",
    "n04366367": "suspension_bridge",
    "n04532670": "viaduct",
    "n02793495": "barn",
    "n03457902": "greenhouse",
    "n03877845": "palace",
    "n03781244": "monastery",
    "n03661043": "library",
    "n02727426": "apiary",
    "n02859443": "boathouse",
    "n03028079": "church",
    "n03788195": "mosque",
    "n04346328": "stupa",
    "n03956157": "planetarium",
    "n04081281": "restaurant",
    "n03032252": "cinema",
    "n03529860": "home_theater",
    "n03697007": "lumbermill",
    "n03065424": "coil",
    "n03837869": "obelisk",
    "n04458633": "totem_pole",
    "n02980441": "castle",
    "n04005630": "prison",
    "n03461385": "grocery_store",
    "n02776631": "bakery",
    "n02791270": "barbershop",
    "n02871525": "bookshop",
    "n02927161": "butcher_shop",
    "n03089624": "confectionery",
    "n04200800": "shoe_shop",
    "n04443257": "tobacco_shop",
    "n04462240": "toyshop",
    "n03388043": "fountain",
    "n03042490": "cliff_dwelling",
    "n04613696": "yurt",
    "n03216828": "dock",
    "n02892201": "brass",
    "n03743016": "megalith",
    "n02788148": "bannister",
    "n02894605": "breakwater",
    "n03160309": "dam",
    "n03000134": "chainlink_fence",
    "n03930313": "picket_fence",
    "n04604644": "worm_fence",
    "n04326547": "stone_wall",
    "n03459775": "grille",
    "n04239074": "sliding_door",
    "n04501370": "turnstile",
    "n03792972": "mountain_tent",
    "n04149813": "scoreboard",
    "n03530642": "honeycomb",
    "n03961711": "plate_rack",
    "n03903868": "pedestal",
    "n02814860": "beacon",
    "n07711569": "mashed_potato",
    "n07720875": "bell_pepper",
    "n07714571": "head_cabbage",
    "n07714990": "broccoli",
    "n07715103": "cauliflower",
    "n07716358": "zucchini",
    "n07716906": "spaghetti_squash",
    "n07717410": "acorn_squash",
    "n07717556": "butternut_squash",
    "n07718472": "cucumber",
    "n07718747": "artichoke",
    "n07730033": "cardoon",
    "n07734744": "mushroom",
    "n04209239": "shower_curtain",
    "n03594734": "jean",
    "n02971356": "carton",
    "n03485794": "handkerchief",
    "n04133789": "sandal",
    "n02747177": "ashcan",
    "n04125021": "safe",
    "n07579787": "plate",
    "n03814906": "necklace",
    "n03134739": "croquet_ball",
    "n03404251": "fur_coat",
    "n04423845": "thimble",
    "n03877472": "pajama",
    "n04120489": "running_shoe",
    "n03062245": "cocktail_shaker",
    "n03014705": "chest",
    "n03717622": "manhole_cover",
    "n03777754": "modem",
    "n04493381": "tub",
    "n04476259": "tray",
    "n02777292": "balance_beam",
    "n07693725": "bagel",
    "n03998194": "prayer_rug",
    "n03617480": "kimono",
    "n07590611": "hot_pot",
    "n04579145": "whiskey_jug",
    "n03623198": "knee_pad",
    "n07248320": "book_jacket",
    "n04277352": "spindle",
    "n04229816": "ski_mask",
    "n02823428": "beer_bottle",
    "n03127747": "crash_helmet",
    "n02877765": "bottlecap",
    "n04435653": "tile_roof",
    "n03724870": "mask",
    "n03710637": "maillot",
    "n03920288": "Petri_dish",
    "n03379051": "football_helmet",
    "n02807133": "bathing_cap",
    "n04399382": "teddy",
    "n03527444": "holster",
    "n03983396": "pop_bottle",
    "n03924679": "photocopier",
    "n04532106": "vestment",
    "n06785654": "crossword_puzzle",
    "n03445777": "golf_ball",
    "n07613480": "trifle",
    "n04350905": "suit",
    "n04562935": "water_tower",
    "n03325584": "feather_boa",
    "n03045698": "cloak",
    "n07892512": "red_wine",
    "n03250847": "drumstick",
    "n04192698": "shield",
    "n03026506": "Christmas_stocking",
    "n03534580": "hoopskirt",
    "n07565083": "menu",
    "n04296562": "stage",
    "n02869837": "bonnet",
    "n07871810": "meat_loaf",
    "n02799071": "baseball",
    "n03314780": "face_powder",
    "n04141327": "scabbard",
    "n04357314": "sunscreen",
    "n02823750": "beer_glass",
    "n13052670": "hen-of-the-woods",
    "n07583066": "guacamole",
    "n03637318": "lampshade",
    "n04599235": "wool",
    "n07802026": "hay",
    "n02883205": "bow_tie",
    "n03709823": "mailbag",
    "n04560804": "water_jug",
    "n02909870": "bucket",
    "n03207743": "dishrag",
    "n04263257": "soup_bowl",
    "n07932039": "eggnog",
    "n03786901": "mortar",
    "n04479046": "trench_coat",
    "n03873416": "paddle",
    "n02999410": "chain",
    "n04367480": "swab",
    "n03775546": "mixing_bowl",
    "n07875152": "potpie",
    "n04591713": "wine_bottle",
    "n04201297": "shoji",
    "n02916936": "bulletproof_vest",
    "n03240683": "drilling_platform",
    "n02840245": "binder",
    "n02963159": "cardigan",
    "n04370456": "sweatshirt",
    "n03991062": "pot",
    "n02843684": "birdhouse",
    "n03482405": "hamper",
    "n03942813": "ping-pong_ball",
    "n03908618": "pencil_box",
    "n03902125": "pay-phone",
    "n07584110": "consomme",
    "n02730930": "apron",
    "n04023962": "punching_bag",
    "n02769748": "backpack",
    "n10148035": "groom",
    "n02817516": "bearskin",
    "n03908714": "pencil_sharpener",
    "n02906734": "broom",
    "n03788365": "mosquito_net",
    "n02667093": "abaya",
    "n03787032": "mortarboard",
    "n03980874": "poncho",
    "n03141823": "crutch",
    "n03976467": "Polaroid_camera",
    "n04264628": "space_bar",
    "n07930864": "cup",
    "n04039381": "racket",
    "n06874185": "traffic_light",
    "n04033901": "quill",
    "n04041544": "radio",
    "n07860988": "dough",
    "n03146219": "cuirass",
    "n03763968": "military_uniform",
    "n03676483": "lipstick",
    "n04209133": "shower_cap",
    "n03782006": "monitor",
    "n03857828": "oscilloscope",
    "n03775071": "mitten",
    "n02892767": "brassiere",
    "n07684084": "French_loaf",
    "n04522168": "vase",
    "n03764736": "milk_can",
    "n04118538": "rugby_ball",
    "n03887697": "paper_towel",
    "n13044778": "earthstar",
    "n03291819": "envelope",
    "n03770439": "miniskirt",
    "n03124170": "cowboy_hat",
    "n04487081": "trolleybus",
    "n03916031": "perfume",
    "n02808440": "bathtub",
    "n07697537": "hotdog",
    "n12985857": "coral_fungus",
    "n02917067": "bullet_train",
    "n03938244": "pillow",
    "n15075141": "toilet_tissue",
    "n02978881": "cassette",
    "n02966687": "carpenter's_kit",
    "n03633091": "ladle",
    "n13040303": "stinkhorn",
    "n03690938": "lotion",
    "n03476991": "hair_spray",
    "n02669723": "academic_gown",
    "n03220513": "dome",
    "n03127925": "crate",
    "n04584207": "wig",
    "n07880968": "burrito",
    "n03937543": "pill_bottle",
    "n03000247": "chain_mail",
    "n04418357": "theater_curtain",
    "n04590129": "window_shade",
    "n02795169": "barrel",
    "n04553703": "washbasin",
    "n02783161": "ballpoint",
    "n02802426": "basketball",
    "n02808304": "bath_towel",
    "n03124043": "cowboy_boot",
    "n03450230": "gown",
    "n04589890": "window_screen",
    "n12998815": "agaric",
    "n02992529": "cellular_telephone",
    "n03825788": "nipple",
    "n02790996": "barbell",
    "n03710193": "mailbox",
    "n03630383": "lab_coat",
    "n03347037": "fire_screen",
    "n03769881": "minibus",
    "n03871628": "packet",
    "n03733281": "maze",
    "n03976657": "pole",
    "n03535780": "horizontal_bar",
    "n04259630": "sombrero",
    "n03929855": "pickelhaube",
    "n04049303": "rain_barrel",
    "n04548362": "wallet",
    "n02979186": "cassette_player",
    "n06596364": "comic_book",
    "n03935335": "piggy_bank",
    "n06794110": "street_sign",
    "n02825657": "bell_cote",
    "n03388183": "fountain_pen",
    "n04591157": "Windsor_tie",
    "n04540053": "volleyball",
    "n03866082": "overskirt",
    "n04136333": "sarong",
    "n04026417": "purse",
    "n02865351": "bolo_tie",
    "n02834397": "bib",
    "n03888257": "parachute",
    "n04235860": "sleeping_bag",
    "n04404412": "television",
    "n04371430": "swimming_trunks",
    "n03733805": "measuring_cup",
    "n07920052": "espresso",
    "n07873807": "pizza",
    "n02895154": "breastplate",
    "n04204238": "shopping_basket",
    "n04597913": "wooden_spoon",
    "n04131690": "saltshaker",
    "n07836838": "chocolate_sauce",
    "n09835506": "ballplayer",
    "n03443371": "goblet",
    "n13037406": "gyromitra",
    "n04336792": "stretcher",
    "n04557648": "water_bottle",
    "n03187595": "dial_telephone",
    "n04254120": "soap_dispenser",
    "n03595614": "jersey",
    "n04146614": "school_bus",
    "n03598930": "jigsaw_puzzle",
    "n03958227": "plastic_bag",
    "n04069434": "reflex_camera",
    "n03188531": "diaper",
    "n02786058": "Band_Aid",
    "n07615774": "ice_lolly",
    "n04525038": "velvet",
    "n04409515": "tennis_ball",
    "n03424325": "gasmask",
    "n03223299": "doormat",
    "n03680355": "Loafer",
    "n07614500": "ice_cream",
    "n07695742": "pretzel",
    "n04033995": "quilt",
    "n03710721": "maillot",
    "n04392985": "tape_player",
    "n03047690": "clog",
    "n03584254": "iPod",
    "n13054560": "bolete",
    "n10565667": "scuba_diver",
    "n03950228": "pitcher",
    "n03729826": "matchstick",
    "n02837789": "bikini",
    "n04254777": "sock",
    "n02988304": "CD_player",
    "n03657121": "lens_cap",
    "n04417672": "thatch",
    "n04523525": "vault",
    "n02815834": "beaker",
    "n09229709": "bubble",
    "n07697313": "cheeseburger",
    "n03888605": "parallel_bars",
    "n03355925": "flagpole",
    "n03063599": "coffee_mug",
    "n04116512": "rubber_eraser",
    "n04325704": "stole",
    "n07831146": "carbonara",
    "n03255030": "dumbbell"
}


class ImageNet_A(ClassificationDataset):
    # ImageNet-1k to ImageNet_A
    thousand_k_to_200 = {
        0: -1,
        1: -1,
        2: -1,
        3: -1,
        4: -1,
        5: -1,
        6: 0,
        7: -1,
        8: -1,
        9: -1,
        10: -1,
        11: 1,
        12: -1,
        13: 2,
        14: -1,
        15: 3,
        16: -1,
        17: 4,
        18: -1,
        19: -1,
        20: -1,
        21: -1,
        22: 5,
        23: 6,
        24: -1,
        25: -1,
        26: -1,
        27: 7,
        28: -1,
        29: -1,
        30: 8,
        31: -1,
        32: -1,
        33: -1,
        34: -1,
        35: -1,
        36: -1,
        37: 9,
        38: -1,
        39: 10,
        40: -1,
        41: -1,
        42: 11,
        43: -1,
        44: -1,
        45: -1,
        46: -1,
        47: 12,
        48: -1,
        49: -1,
        50: 13,
        51: -1,
        52: -1,
        53: -1,
        54: -1,
        55: -1,
        56: -1,
        57: 14,
        58: -1,
        59: -1,
        60: -1,
        61: -1,
        62: -1,
        63: -1,
        64: -1,
        65: -1,
        66: -1,
        67: -1,
        68: -1,
        69: -1,
        70: 15,
        71: 16,
        72: -1,
        73: -1,
        74: -1,
        75: -1,
        76: 17,
        77: -1,
        78: -1,
        79: 18,
        80: -1,
        81: -1,
        82: -1,
        83: -1,
        84: -1,
        85: -1,
        86: -1,
        87: -1,
        88: -1,
        89: 19,
        90: 20,
        91: -1,
        92: -1,
        93: -1,
        94: 21,
        95: -1,
        96: 22,
        97: 23,
        98: -1,
        99: 24,
        100: -1,
        101: -1,
        102: -1,
        103: -1,
        104: -1,
        105: 25,
        106: -1,
        107: 26,
        108: 27,
        109: -1,
        110: 28,
        111: -1,
        112: -1,
        113: 29,
        114: -1,
        115: -1,
        116: -1,
        117: -1,
        118: -1,
        119: -1,
        120: -1,
        121: -1,
        122: -1,
        123: -1,
        124: 30,
        125: 31,
        126: -1,
        127: -1,
        128: -1,
        129: -1,
        130: 32,
        131: -1,
        132: 33,
        133: -1,
        134: -1,
        135: -1,
        136: -1,
        137: -1,
        138: -1,
        139: -1,
        140: -1,
        141: -1,
        142: -1,
        143: 34,
        144: 35,
        145: -1,
        146: -1,
        147: -1,
        148: -1,
        149: -1,
        150: 36,
        151: 37,
        152: -1,
        153: -1,
        154: -1,
        155: -1,
        156: -1,
        157: -1,
        158: -1,
        159: -1,
        160: -1,
        161: -1,
        162: -1,
        163: -1,
        164: -1,
        165: -1,
        166: -1,
        167: -1,
        168: -1,
        169: -1,
        170: -1,
        171: -1,
        172: -1,
        173: -1,
        174: -1,
        175: -1,
        176: -1,
        177: -1,
        178: -1,
        179: -1,
        180: -1,
        181: -1,
        182: -1,
        183: -1,
        184: -1,
        185: -1,
        186: -1,
        187: -1,
        188: -1,
        189: -1,
        190: -1,
        191: -1,
        192: -1,
        193: -1,
        194: -1,
        195: -1,
        196: -1,
        197: -1,
        198: -1,
        199: -1,
        200: -1,
        201: -1,
        202: -1,
        203: -1,
        204: -1,
        205: -1,
        206: -1,
        207: 38,
        208: -1,
        209: -1,
        210: -1,
        211: -1,
        212: -1,
        213: -1,
        214: -1,
        215: -1,
        216: -1,
        217: -1,
        218: -1,
        219: -1,
        220: -1,
        221: -1,
        222: -1,
        223: -1,
        224: -1,
        225: -1,
        226: -1,
        227: -1,
        228: -1,
        229: -1,
        230: -1,
        231: -1,
        232: -1,
        233: -1,
        234: 39,
        235: 40,
        236: -1,
        237: -1,
        238: -1,
        239: -1,
        240: -1,
        241: -1,
        242: -1,
        243: -1,
        244: -1,
        245: -1,
        246: -1,
        247: -1,
        248: -1,
        249: -1,
        250: -1,
        251: -1,
        252: -1,
        253: -1,
        254: 41,
        255: -1,
        256: -1,
        257: -1,
        258: -1,
        259: -1,
        260: -1,
        261: -1,
        262: -1,
        263: -1,
        264: -1,
        265: -1,
        266: -1,
        267: -1,
        268: -1,
        269: -1,
        270: -1,
        271: -1,
        272: -1,
        273: -1,
        274: -1,
        275: -1,
        276: -1,
        277: 42,
        278: -1,
        279: -1,
        280: -1,
        281: -1,
        282: -1,
        283: 43,
        284: -1,
        285: -1,
        286: -1,
        287: 44,
        288: -1,
        289: -1,
        290: -1,
        291: 45,
        292: -1,
        293: -1,
        294: -1,
        295: 46,
        296: -1,
        297: -1,
        298: 47,
        299: -1,
        300: -1,
        301: 48,
        302: -1,
        303: -1,
        304: -1,
        305: -1,
        306: 49,
        307: 50,
        308: 51,
        309: 52,
        310: 53,
        311: 54,
        312: -1,
        313: 55,
        314: 56,
        315: 57,
        316: -1,
        317: 58,
        318: -1,
        319: 59,
        320: -1,
        321: -1,
        322: -1,
        323: 60,
        324: 61,
        325: -1,
        326: 62,
        327: 63,
        328: -1,
        329: -1,
        330: 64,
        331: -1,
        332: -1,
        333: -1,
        334: 65,
        335: 66,
        336: 67,
        337: -1,
        338: -1,
        339: -1,
        340: -1,
        341: -1,
        342: -1,
        343: -1,
        344: -1,
        345: -1,
        346: -1,
        347: 68,
        348: -1,
        349: -1,
        350: -1,
        351: -1,
        352: -1,
        353: -1,
        354: -1,
        355: -1,
        356: -1,
        357: -1,
        358: -1,
        359: -1,
        360: -1,
        361: 69,
        362: -1,
        363: 70,
        364: -1,
        365: -1,
        366: -1,
        367: -1,
        368: -1,
        369: -1,
        370: -1,
        371: -1,
        372: 71,
        373: -1,
        374: -1,
        375: -1,
        376: -1,
        377: -1,
        378: 72,
        379: -1,
        380: -1,
        381: -1,
        382: -1,
        383: -1,
        384: -1,
        385: -1,
        386: 73,
        387: -1,
        388: -1,
        389: -1,
        390: -1,
        391: -1,
        392: -1,
        393: -1,
        394: -1,
        395: -1,
        396: -1,
        397: 74,
        398: -1,
        399: -1,
        400: 75,
        401: 76,
        402: 77,
        403: -1,
        404: 78,
        405: -1,
        406: -1,
        407: 79,
        408: -1,
        409: -1,
        410: -1,
        411: 80,
        412: -1,
        413: -1,
        414: -1,
        415: -1,
        416: 81,
        417: 82,
        418: -1,
        419: -1,
        420: 83,
        421: -1,
        422: -1,
        423: -1,
        424: -1,
        425: 84,
        426: -1,
        427: -1,
        428: 85,
        429: -1,
        430: 86,
        431: -1,
        432: -1,
        433: -1,
        434: -1,
        435: -1,
        436: -1,
        437: 87,
        438: 88,
        439: -1,
        440: -1,
        441: -1,
        442: -1,
        443: -1,
        444: -1,
        445: 89,
        446: -1,
        447: -1,
        448: -1,
        449: -1,
        450: -1,
        451: -1,
        452: -1,
        453: -1,
        454: -1,
        455: -1,
        456: 90,
        457: 91,
        458: -1,
        459: -1,
        460: -1,
        461: 92,
        462: 93,
        463: -1,
        464: -1,
        465: -1,
        466: -1,
        467: -1,
        468: -1,
        469: -1,
        470: 94,
        471: -1,
        472: 95,
        473: -1,
        474: -1,
        475: -1,
        476: -1,
        477: -1,
        478: -1,
        479: -1,
        480: -1,
        481: -1,
        482: -1,
        483: 96,
        484: -1,
        485: -1,
        486: 97,
        487: -1,
        488: 98,
        489: -1,
        490: -1,
        491: -1,
        492: 99,
        493: -1,
        494: -1,
        495: -1,
        496: 100,
        497: -1,
        498: -1,
        499: -1,
        500: -1,
        501: -1,
        502: -1,
        503: -1,
        504: -1,
        505: -1,
        506: -1,
        507: -1,
        508: -1,
        509: -1,
        510: -1,
        511: -1,
        512: -1,
        513: -1,
        514: 101,
        515: -1,
        516: 102,
        517: -1,
        518: -1,
        519: -1,
        520: -1,
        521: -1,
        522: -1,
        523: -1,
        524: -1,
        525: -1,
        526: -1,
        527: -1,
        528: 103,
        529: -1,
        530: 104,
        531: -1,
        532: -1,
        533: -1,
        534: -1,
        535: -1,
        536: -1,
        537: -1,
        538: -1,
        539: 105,
        540: -1,
        541: -1,
        542: 106,
        543: 107,
        544: -1,
        545: -1,
        546: -1,
        547: -1,
        548: -1,
        549: 108,
        550: -1,
        551: -1,
        552: 109,
        553: -1,
        554: -1,
        555: -1,
        556: -1,
        557: 110,
        558: -1,
        559: -1,
        560: -1,
        561: 111,
        562: 112,
        563: -1,
        564: -1,
        565: -1,
        566: -1,
        567: -1,
        568: -1,
        569: 113,
        570: -1,
        571: -1,
        572: 114,
        573: 115,
        574: -1,
        575: 116,
        576: -1,
        577: -1,
        578: -1,
        579: 117,
        580: -1,
        581: -1,
        582: -1,
        583: -1,
        584: -1,
        585: -1,
        586: -1,
        587: -1,
        588: -1,
        589: 118,
        590: -1,
        591: -1,
        592: -1,
        593: -1,
        594: -1,
        595: -1,
        596: -1,
        597: -1,
        598: -1,
        599: -1,
        600: -1,
        601: -1,
        602: -1,
        603: -1,
        604: -1,
        605: -1,
        606: 119,
        607: 120,
        608: -1,
        609: 121,
        610: -1,
        611: -1,
        612: -1,
        613: -1,
        614: 122,
        615: -1,
        616: -1,
        617: -1,
        618: -1,
        619: -1,
        620: -1,
        621: -1,
        622: -1,
        623: -1,
        624: -1,
        625: -1,
        626: 123,
        627: 124,
        628: -1,
        629: -1,
        630: -1,
        631: -1,
        632: -1,
        633: -1,
        634: -1,
        635: -1,
        636: -1,
        637: -1,
        638: -1,
        639: -1,
        640: 125,
        641: 126,
        642: 127,
        643: 128,
        644: -1,
        645: -1,
        646: -1,
        647: -1,
        648: -1,
        649: -1,
        650: -1,
        651: -1,
        652: -1,
        653: -1,
        654: -1,
        655: -1,
        656: -1,
        657: -1,
        658: 129,
        659: -1,
        660: -1,
        661: -1,
        662: -1,
        663: -1,
        664: -1,
        665: -1,
        666: -1,
        667: -1,
        668: 130,
        669: -1,
        670: -1,
        671: -1,
        672: -1,
        673: -1,
        674: -1,
        675: -1,
        676: -1,
        677: 131,
        678: -1,
        679: -1,
        680: -1,
        681: -1,
        682: 132,
        683: -1,
        684: 133,
        685: -1,
        686: -1,
        687: 134,
        688: -1,
        689: -1,
        690: -1,
        691: -1,
        692: -1,
        693: -1,
        694: -1,
        695: -1,
        696: -1,
        697: -1,
        698: -1,
        699: -1,
        700: -1,
        701: 135,
        702: -1,
        703: -1,
        704: 136,
        705: -1,
        706: -1,
        707: -1,
        708: -1,
        709: -1,
        710: -1,
        711: -1,
        712: -1,
        713: -1,
        714: -1,
        715: -1,
        716: -1,
        717: -1,
        718: -1,
        719: 137,
        720: -1,
        721: -1,
        722: -1,
        723: -1,
        724: -1,
        725: -1,
        726: -1,
        727: -1,
        728: -1,
        729: -1,
        730: -1,
        731: -1,
        732: -1,
        733: -1,
        734: -1,
        735: -1,
        736: 138,
        737: -1,
        738: -1,
        739: -1,
        740: -1,
        741: -1,
        742: -1,
        743: -1,
        744: -1,
        745: -1,
        746: 139,
        747: -1,
        748: -1,
        749: 140,
        750: -1,
        751: -1,
        752: 141,
        753: -1,
        754: -1,
        755: -1,
        756: -1,
        757: -1,
        758: 142,
        759: -1,
        760: -1,
        761: -1,
        762: -1,
        763: 143,
        764: -1,
        765: 144,
        766: -1,
        767: -1,
        768: 145,
        769: -1,
        770: -1,
        771: -1,
        772: -1,
        773: 146,
        774: 147,
        775: -1,
        776: 148,
        777: -1,
        778: -1,
        779: 149,
        780: 150,
        781: -1,
        782: -1,
        783: -1,
        784: -1,
        785: -1,
        786: 151,
        787: -1,
        788: -1,
        789: -1,
        790: -1,
        791: -1,
        792: 152,
        793: -1,
        794: -1,
        795: -1,
        796: -1,
        797: 153,
        798: -1,
        799: -1,
        800: -1,
        801: -1,
        802: 154,
        803: 155,
        804: 156,
        805: -1,
        806: -1,
        807: -1,
        808: -1,
        809: -1,
        810: -1,
        811: -1,
        812: -1,
        813: 157,
        814: -1,
        815: 158,
        816: -1,
        817: -1,
        818: -1,
        819: -1,
        820: 159,
        821: -1,
        822: -1,
        823: 160,
        824: -1,
        825: -1,
        826: -1,
        827: -1,
        828: -1,
        829: -1,
        830: -1,
        831: 161,
        832: -1,
        833: 162,
        834: -1,
        835: 163,
        836: -1,
        837: -1,
        838: -1,
        839: 164,
        840: -1,
        841: -1,
        842: -1,
        843: -1,
        844: -1,
        845: 165,
        846: -1,
        847: 166,
        848: -1,
        849: -1,
        850: 167,
        851: -1,
        852: -1,
        853: -1,
        854: -1,
        855: -1,
        856: -1,
        857: -1,
        858: -1,
        859: 168,
        860: -1,
        861: -1,
        862: 169,
        863: -1,
        864: -1,
        865: -1,
        866: -1,
        867: -1,
        868: -1,
        869: -1,
        870: 170,
        871: -1,
        872: -1,
        873: -1,
        874: -1,
        875: -1,
        876: -1,
        877: -1,
        878: -1,
        879: 171,
        880: 172,
        881: -1,
        882: -1,
        883: -1,
        884: -1,
        885: -1,
        886: -1,
        887: -1,
        888: 173,
        889: -1,
        890: 174,
        891: -1,
        892: -1,
        893: -1,
        894: -1,
        895: -1,
        896: -1,
        897: 175,
        898: -1,
        899: -1,
        900: 176,
        901: -1,
        902: -1,
        903: -1,
        904: -1,
        905: -1,
        906: -1,
        907: 177,
        908: -1,
        909: -1,
        910: -1,
        911: -1,
        912: -1,
        913: 178,
        914: -1,
        915: -1,
        916: -1,
        917: -1,
        918: -1,
        919: -1,
        920: -1,
        921: -1,
        922: -1,
        923: -1,
        924: 179,
        925: -1,
        926: -1,
        927: -1,
        928: -1,
        929: -1,
        930: -1,
        931: -1,
        932: 180,
        933: 181,
        934: 182,
        935: -1,
        936: -1,
        937: 183,
        938: -1,
        939: -1,
        940: -1,
        941: -1,
        942: -1,
        943: 184,
        944: -1,
        945: 185,
        946: -1,
        947: 186,
        948: -1,
        949: -1,
        950: -1,
        951: 187,
        952: -1,
        953: -1,
        954: 188,
        955: -1,
        956: 189,
        957: 190,
        958: -1,
        959: 191,
        960: -1,
        961: -1,
        962: -1,
        963: -1,
        964: -1,
        965: -1,
        966: -1,
        967: -1,
        968: -1,
        969: -1,
        970: -1,
        971: 192,
        972: 193,
        973: -1,
        974: -1,
        975: -1,
        976: -1,
        977: -1,
        978: -1,
        979: -1,
        980: 194,
        981: 195,
        982: -1,
        983: -1,
        984: 196,
        985: -1,
        986: 197,
        987: 198,
        988: 199,
        989: -1,
        990: -1,
        991: -1,
        992: -1,
        993: -1,
        994: -1,
        995: -1,
        996: -1,
        997: -1,
        998: -1,
        999: -1}

    def __init__(
        self,
        root: str,
        resize: Optional[Tuple[int]] = None,
        augmentations: Callable[[Image.Image, Dict[str, Any]], Tuple[Image.Image, Dict[str, Any]]] = None,
        use_real_class_name: bool = False
    ):
        """
        Args:
            root: root to Imagenet folder
            split: split of dataset, i.e., `train` and `val`
            resize: all images will be resized to given size. If `None`, all images will not be resized
            manual_classes_fp: csv file with all manual classes in a column with name "classes"
            use_real_class_name: if True, use real class name for as label info, e.g.,
                "kit_fox" rather than "n02119789"
        """
        super().__init__(resize, augmentations)
        self.root = os.path.expanduser(root)
        self.data_folder = self.root
        self.use_real_class_name = use_real_class_name
        self.logger = log_utils.get_master_logger("Imagenet-A")

        self._init_dataset()

    def _init_dataset(self):
        self.dataset_mean = MEAN
        self.dataset_std = STD
        self.logger.info("Reading dataset folder...")
        self.instances, self.label_info, self.label_map = make_datafolder(self.data_folder)
        if self.use_real_class_name:
            self.label_info = {k: REAL_LABEL_MAP[v] for k, v in self.label_info.items()}
            self.label_map = {REAL_LABEL_MAP[k]: v for k, v in self.label_map.items()}
        self.indices_in_1k = [k for k in self.thousand_k_to_200 if self.thousand_k_to_200[k] != -1]

    def __len__(self):
        return len(self.instances)

    def get_image(self, index: int) -> Image:
        image_fp = os.path.join(self.data_folder, self.instances[index][0])
        image = default_loader(image_fp)
        return image

    def get_annotation(self, index: int) -> Dict[str, Any]:
        label = self.instances[index][1]
        annot = dict(label=torch.tensor(label))
        return annot


class ImageNet_R(ClassificationDataset):
    # ImageNet-1k to ImageNet_R
    indices_in_1k = [
        1,
        2,
        4,
        6,
        8,
        9,
        11,
        13,
        22,
        23,
        26,
        29,
        31,
        39,
        47,
        63,
        71,
        76,
        79,
        84,
        90,
        94,
        96,
        97,
        99,
        100,
        105,
        107,
        113,
        122,
        125,
        130,
        132,
        144,
        145,
        147,
        148,
        150,
        151,
        155,
        160,
        161,
        162,
        163,
        171,
        172,
        178,
        187,
        195,
        199,
        203,
        207,
        208,
        219,
        231,
        232,
        234,
        235,
        242,
        245,
        247,
        250,
        251,
        254,
        259,
        260,
        263,
        265,
        267,
        269,
        276,
        277,
        281,
        288,
        289,
        291,
        292,
        293,
        296,
        299,
        301,
        308,
        309,
        310,
        311,
        314,
        315,
        319,
        323,
        327,
        330,
        334,
        335,
        337,
        338,
        340,
        341,
        344,
        347,
        353,
        355,
        361,
        362,
        365,
        366,
        367,
        368,
        372,
        388,
        390,
        393,
        397,
        401,
        407,
        413,
        414,
        425,
        428,
        430,
        435,
        437,
        441,
        447,
        448,
        457,
        462,
        463,
        469,
        470,
        471,
        472,
        476,
        483,
        487,
        515,
        546,
        555,
        558,
        570,
        579,
        583,
        587,
        593,
        594,
        596,
        609,
        613,
        617,
        621,
        629,
        637,
        657,
        658,
        701,
        717,
        724,
        763,
        768,
        774,
        776,
        779,
        780,
        787,
        805,
        812,
        815,
        820,
        824,
        833,
        847,
        852,
        866,
        875,
        883,
        889,
        895,
        907,
        928,
        931,
        932,
        933,
        934,
        936,
        937,
        943,
        945,
        947,
        948,
        949,
        951,
        953,
        954,
        957,
        963,
        965,
        967,
        980,
        981,
        983,
        988
    ]

    def __init__(
        self,
        root: str,
        resize: Optional[Tuple[int]] = None,
        augmentations: Callable[[Image.Image, Dict[str, Any]], Tuple[Image.Image, Dict[str, Any]]] = None,
        use_real_class_name: bool = False
    ):
        """
        Args:
            root: root to Imagenet folder
            split: split of dataset, i.e., `train` and `val`
            resize: all images will be resized to given size. If `None`, all images will not be resized
            manual_classes_fp: csv file with all manual classes in a column with name "classes"
            use_real_class_name: if True, use real class name for as label info, e.g.,
                "kit_fox" rather than "n02119789"
        """
        super().__init__(resize, augmentations)
        self.root = os.path.expanduser(root)
        self.data_folder = self.root
        self.use_real_class_name = use_real_class_name
        self.logger = log_utils.get_master_logger("Imagenet-R")

        self._init_dataset()

    def _init_dataset(self):
        self.dataset_mean = MEAN
        self.dataset_std = STD
        self.logger.info("Reading dataset folder...")
        self.instances, self.label_info, self.label_map = make_datafolder(self.data_folder)
        if self.use_real_class_name:
            self.label_info = {k: REAL_LABEL_MAP[v] for k, v in self.label_info.items()}
            self.label_map = {REAL_LABEL_MAP[k]: v for k, v in self.label_map.items()}

    def __len__(self):
        return len(self.instances)

    def get_image(self, index: int) -> Image:
        image_fp = os.path.join(self.data_folder, self.instances[index][0])
        image = default_loader(image_fp)
        return image

    def get_annotation(self, index: int) -> Dict[str, Any]:
        label = self.instances[index][1]
        annot = dict(label=torch.tensor(label))
        return annot




